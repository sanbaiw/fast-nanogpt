# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/fast-nanogpt',
                'doc_host': 'https://.github.io',
                'git_url': 'https://github.com//fast-nanogpt',
                'lib_path': 'tinyai'},
  'syms': { 'tinyai.learner': { 'tinyai.learner.Callback': ('pt2-learner.html#callback', 'tinyai/learner.py'),
                                'tinyai.learner.CancelBatchException': ('pt2-learner.html#cancelbatchexception', 'tinyai/learner.py'),
                                'tinyai.learner.CancelEpochException': ('pt2-learner.html#cancelepochexception', 'tinyai/learner.py'),
                                'tinyai.learner.CancelFitException': ('pt2-learner.html#cancelfitexception', 'tinyai/learner.py'),
                                'tinyai.learner.DataLoaders': ('pt2-learner.html#dataloaders', 'tinyai/learner.py'),
                                'tinyai.learner.DataLoaders.__init__': ('pt2-learner.html#dataloaders.__init__', 'tinyai/learner.py'),
                                'tinyai.learner.DataLoaders.from_dd': ('pt2-learner.html#dataloaders.from_dd', 'tinyai/learner.py'),
                                'tinyai.learner.DataSet': ('pt2-learner.html#dataset', 'tinyai/learner.py'),
                                'tinyai.learner.DataSet.__getitem__': ('pt2-learner.html#dataset.__getitem__', 'tinyai/learner.py'),
                                'tinyai.learner.DataSet.__init__': ('pt2-learner.html#dataset.__init__', 'tinyai/learner.py'),
                                'tinyai.learner.DataSet.__len__': ('pt2-learner.html#dataset.__len__', 'tinyai/learner.py'),
                                'tinyai.learner.DeviceCB': ('pt2-learner.html#devicecb', 'tinyai/learner.py'),
                                'tinyai.learner.DeviceCB.__init__': ('pt2-learner.html#devicecb.__init__', 'tinyai/learner.py'),
                                'tinyai.learner.DeviceCB.before_batch': ('pt2-learner.html#devicecb.before_batch', 'tinyai/learner.py'),
                                'tinyai.learner.DeviceCB.before_fit': ('pt2-learner.html#devicecb.before_fit', 'tinyai/learner.py'),
                                'tinyai.learner.Learner': ('pt2-learner.html#learner', 'tinyai/learner.py'),
                                'tinyai.learner.Learner.__getattr__': ('pt2-learner.html#learner.__getattr__', 'tinyai/learner.py'),
                                'tinyai.learner.Learner.__init__': ('pt2-learner.html#learner.__init__', 'tinyai/learner.py'),
                                'tinyai.learner.Learner._fit': ('pt2-learner.html#learner._fit', 'tinyai/learner.py'),
                                'tinyai.learner.Learner._one_batch': ('pt2-learner.html#learner._one_batch', 'tinyai/learner.py'),
                                'tinyai.learner.Learner._one_epoch': ('pt2-learner.html#learner._one_epoch', 'tinyai/learner.py'),
                                'tinyai.learner.Learner.callback': ('pt2-learner.html#learner.callback', 'tinyai/learner.py'),
                                'tinyai.learner.Learner.fit': ('pt2-learner.html#learner.fit', 'tinyai/learner.py'),
                                'tinyai.learner.Learner.one_epoch': ('pt2-learner.html#learner.one_epoch', 'tinyai/learner.py'),
                                'tinyai.learner.Learner.training': ('pt2-learner.html#learner.training', 'tinyai/learner.py'),
                                'tinyai.learner.TrainCB': ('pt2-learner.html#traincb', 'tinyai/learner.py'),
                                'tinyai.learner.TrainCB.backward': ('pt2-learner.html#traincb.backward', 'tinyai/learner.py'),
                                'tinyai.learner.TrainCB.predict': ('pt2-learner.html#traincb.predict', 'tinyai/learner.py'),
                                'tinyai.learner.TrainCB.step': ('pt2-learner.html#traincb.step', 'tinyai/learner.py'),
                                'tinyai.learner.TrainCB.zero_grad': ('pt2-learner.html#traincb.zero_grad', 'tinyai/learner.py'),
                                'tinyai.learner.run_cbs': ('pt2-learner.html#run_cbs', 'tinyai/learner.py'),
                                'tinyai.learner.to_device': ('pt2-learner.html#to_device', 'tinyai/learner.py'),
                                'tinyai.learner.with_cbs': ('pt2-learner.html#with_cbs', 'tinyai/learner.py'),
                                'tinyai.learner.with_cbs.__call__': ('pt2-learner.html#with_cbs.__call__', 'tinyai/learner.py'),
                                'tinyai.learner.with_cbs.__init__': ('pt2-learner.html#with_cbs.__init__', 'tinyai/learner.py')},
            'tinyai.model': { 'tinyai.model.Block': ('pt1-vanilla-gpt2.html#block', 'tinyai/model.py'),
                              'tinyai.model.Block.__init__': ('pt1-vanilla-gpt2.html#block.__init__', 'tinyai/model.py'),
                              'tinyai.model.Block.forward': ('pt1-vanilla-gpt2.html#block.forward', 'tinyai/model.py'),
                              'tinyai.model.CausalSelfAttention': ('pt1-vanilla-gpt2.html#causalselfattention', 'tinyai/model.py'),
                              'tinyai.model.CausalSelfAttention.__init__': ( 'pt1-vanilla-gpt2.html#causalselfattention.__init__',
                                                                             'tinyai/model.py'),
                              'tinyai.model.CausalSelfAttention.forward': ( 'pt1-vanilla-gpt2.html#causalselfattention.forward',
                                                                            'tinyai/model.py'),
                              'tinyai.model.GPT': ('pt1-vanilla-gpt2.html#gpt', 'tinyai/model.py'),
                              'tinyai.model.GPT.__init__': ('pt1-vanilla-gpt2.html#gpt.__init__', 'tinyai/model.py'),
                              'tinyai.model.GPT.forward': ('pt1-vanilla-gpt2.html#gpt.forward', 'tinyai/model.py'),
                              'tinyai.model.GPTConfig': ('pt1-vanilla-gpt2.html#gptconfig', 'tinyai/model.py'),
                              'tinyai.model.MLP': ('pt1-vanilla-gpt2.html#mlp', 'tinyai/model.py'),
                              'tinyai.model.MLP.__init__': ('pt1-vanilla-gpt2.html#mlp.__init__', 'tinyai/model.py'),
                              'tinyai.model.MLP.forward': ('pt1-vanilla-gpt2.html#mlp.forward', 'tinyai/model.py'),
                              'tinyai.model.get_model': ('pt1-vanilla-gpt2.html#get_model', 'tinyai/model.py')}}}
